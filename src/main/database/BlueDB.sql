-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.customers
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    firstname character varying(100) COLLATE pg_catalog."default" NOT NULL,
    lastname character varying(100) COLLATE pg_catalog."default",
    phone_number character varying(30) COLLATE pg_catalog."default",
    vat character varying(20) COLLATE pg_catalog."default",
    doy character varying(50) COLLATE pg_catalog."default",
    address character varying(100) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    CONSTRAINT customers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.materials
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 3 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    quantity_in_stock integer,
    unit_price numeric(10, 2),
    CONSTRAINT materials_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    category character varying(50) COLLATE pg_catalog."default" NOT NULL,
    price numeric(10, 2) NOT NULL,
    stock_quantity integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at time with time zone NOT NULL,
    weight numeric(10, 2),
    minutes_to_make integer,
    profit_margin numeric(10, 2) NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.products_materials
(
    product_id integer NOT NULL,
    material_id integer NOT NULL,
    quantity_used numeric(10, 2),
    CONSTRAINT products_materials_pkey PRIMARY KEY (product_id, material_id)
);

CREATE TABLE IF NOT EXISTS public.providers
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    vat character varying(15) COLLATE pg_catalog."default" NOT NULL,
    doy character varying(50) COLLATE pg_catalog."default" NOT NULL,
    address character varying(100) COLLATE pg_catalog."default",
    phone_number character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT providers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.providers_materials
(
    material_id integer NOT NULL,
    provider_id integer NOT NULL,
    CONSTRAINT providers_materials_pkey PRIMARY KEY (material_id, provider_id)
);

CREATE TABLE IF NOT EXISTS public.purchases
(
    id bigserial NOT NULL,
    date timestamp with time zone NOT NULL,
    provider_id integer NOT NULL,
    total_amount numeric(10, 2) NOT NULL,
    CONSTRAINT purchases_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.purchases_item
(
    purchase_item_id bigserial NOT NULL,
    purchase_id integer NOT NULL,
    material_id integer NOT NULL,
    quantity numeric(10, 2) NOT NULL,
    price_per_unit numeric(10, 2) NOT NULL,
    CONSTRAINT purchases_item_pkey PRIMARY KEY (purchase_item_id)
);

CREATE TABLE IF NOT EXISTS public.sales
(
    id bigserial NOT NULL,
    date timestamp with time zone NOT NULL,
    customer_id integer,
    total_amount_suggested numeric(10, 2) NOT NULL,
    payment_method character varying(50) COLLATE pg_catalog."default" NOT NULL,
    total_amount_final numeric(10, 2) NOT NULL,
    discount_percent numeric(5, 2) NOT NULL DEFAULT 0,
    CONSTRAINT sales_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sales_item
(
    sales_item_id bigserial NOT NULL,
    sale_id bigserial NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    price_per_unit numeric(10, 2) NOT NULL,
    CONSTRAINT sales_item_pkey PRIMARY KEY (sales_item_id)
);

ALTER TABLE IF EXISTS public.products_materials
    ADD CONSTRAINT fk_materials_products FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.products_materials
    ADD CONSTRAINT fk_products_materials FOREIGN KEY (material_id)
    REFERENCES public.materials (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.providers_materials
    ADD CONSTRAINT fk_materials_providers FOREIGN KEY (material_id)
    REFERENCES public.materials (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.providers_materials
    ADD CONSTRAINT fk_providers_materials FOREIGN KEY (provider_id)
    REFERENCES public.providers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.purchases
    ADD CONSTRAINT fk_purchases_providers FOREIGN KEY (provider_id)
    REFERENCES public.providers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.purchases_item
    ADD CONSTRAINT fk_materials_purchases FOREIGN KEY (purchase_id)
    REFERENCES public.purchases (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.purchases_item
    ADD CONSTRAINT fk_purchases_materials FOREIGN KEY (material_id)
    REFERENCES public.materials (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.sales
    ADD CONSTRAINT fk_sales_customers FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.sales_item
    ADD CONSTRAINT fk_products_sales FOREIGN KEY (sale_id)
    REFERENCES public.sales (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.sales_item
    ADD CONSTRAINT fk_sales_products FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;

END;